
# You can set shell.program to the path of your favorite shell, e.g. /bin/zsh. Entries in shell.args are passed as arguments to the shell.
# Default:
# shell = "<string>" | { program = "<string>", args = ["<string>",] }

# Linux/BSD/macOS: $SHELL or the user's login shell, if $SHELL is unset
# Windows: "powershell"

# Example:

# [shell]
# program = "/bin/zsh"
# args = ["-l"]

# Directory the shell is started in. When this is unset, or "None", the working directory of the parent process will be used.
# Default: "None"
# working_directory = "<string>" | "None"


# Live config reload (changes require restart)
# live_config_reload = true | false
# Default: true


# ipc_socket = true | false # (unix only)
# Offer IPC using alacritty msg
# Default: true
[shell]
program = "zellij"
# args = [""]

# This section documents the [window] table of the configuration file.
[window]
# Window dimensions (changes require restart).
# Number of lines/columns (not pixels) in the terminal. Both lines and columns must be non-zero for this to take effect. The number of columns must be at least 2, while using a value of 0 for columns and lines will fall back to the window manager's recommended size
# Default: { columns = 0, lines = 0 }
dimensions = { columns = 90, lines = 30 }

# Window startup position.
# Specified in number of pixels.
# If the position is "None", the window manager will handle placement.
# Default: "None"
# position = "None" | { x = <integer>, y = <integer> }

# Blank space added around the window in pixels. This padding is scaled by DPI and the specified value is always added at both opposing sides.
# Default: { x = 0, y = 0 }
padding = { x = 10, y = 8 }

# Spread additional padding evenly around the terminal content.
# Default: false
# dynamic_padding = true | false

# Window decorations.
# Full
# Borders and title bar.
# None
# Neither borders nor title bar.
# Transparent (macOS only)
# Title bar, transparent background and title bar buttons.
# Buttonless (macOS only)
# Title bar, transparent background and no title bar buttons.
# Default: "Full"
# decorations = "Full" | "None" | "Transparent" | "Buttonless"
decorations = "None"

# Background opacity as a floating point number from 0.0 to 1.0. The value 0.0 is completely transparent and 1.0 is opaque.
# Default: 1.0
opacity = 0.95

# Request compositor to blur content behind transparent windows.
# Default: false
blur = true

# Startup mode (changes require restart)
# Windowed
# Regular window.
# Maximized
# The window will be maximized on startup.
# Fullscreen
# The window will be fullscreened on startup.
# SimpleFullscreen (macOS only)
# Same as Fullscreen, but you can stack windows on top.
# Default: "Windowed"
# startup_mode = "Windowed"

# Window title.
# Default: "Alacritty"
# title = "<string>"

# Allow terminal applications to change Alacritty's window title.
# Default: true
# dynamic_title = true | false

# Window class.
# On Wayland, general is used as app_id and instance is ignored.
# Default: { instance = "Alacritty", general = "Alacritty" }
# class = { instance = "<string>", general = "<string>" } # (Linux/BSD only)

# Override the variant of the System theme/GTK theme/Wayland client side decorations. Set this to "None" to use the system's default theme variant.
# Default: "None"
decorations_theme_variant = "Dark"

# Prefer resizing window by discrete steps equal to cell dimensions.
# Default: false
# resize_increments = true | false

# Make Option key behave as Alt.
# Default: "None"
# option_as_alt = "OnlyLeft" | "OnlyRight" | "Both" | "None" # (macos only)

# This section documents the [scrolling] table of the configuration file.
[scrolling]
# Maximum number of lines in the scrollback buffer.
# Specifying 0 will disable scrolling.
# Limited to 100000.
# Default: 10000
history = 20000

# Number of line scrolled for every input scroll increment.
# Default: 3
multiplier = 5

# This section documents the [font] table of the configuration file.
[font]
# Default:
# Linux/BSD: { family = "monospace", style = "Regular" }
# Windows: { family = "Consolas", style = "Regular" }
# macOS: { family = "Menlo", style = "Regular" }
# bold = { family = "<string>", style = "<string>" }
# If the family is not specified, it will fall back to the value specified for the normal font.
# Default: { style = "Bold" }
normal = { family = "JetBrainsMono Nerd Font", style = "Regular" }

# If the family is not specified, it will fall back to the value specified for the normal font.
# Default: { style = "Italic" }
# italic = { family = "<string>", style = "<string>" }

# If the family is not specified, it will fall back to the value specified for the normal font.
# Default: { style = "Bold Italic" }
# bold_italic = { family = "<string>", style = "<string>" }

# Font size in points.
# Default: 11.25
size = 10

# Offset is the extra space around each character. y can be thought of as modifying the line spacing, and x as modifying the letter spacing.
# Default: { x = 0, y = 0 }
# offset = { x = <integer>, y = <integer> }

# Glyph offset determines the locations of the glyphs within their cells with the default being at the bottom. Increasing x moves the glyph to the right, increasing y moves the glyph upward.
# glyph_offset = { x = <integer>, y = <integer> }

# When true, Alacritty will use a custom built-in font for box drawing characters (Unicode points U+2500 - U+259F) and powerline symbols (Unicode points U+E0B0 - U+E0B3).
# Default: true
# builtin_box_drawing = true | false

[colors]
# catppuccin-mocha
[colors.primary]
background = "#1e1e2e"
foreground = "#cdd6f4"
dim_foreground = "#7f849c"
bright_foreground = "#cdd6f4"

[colors.cursor]
text = "#1e1e2e"
cursor = "#f5e0dc"

[colors.vi_mode_cursor]
text = "#1e1e2e"
cursor = "#b4befe"

[colors.search.matches]
foreground = "#1e1e2e"
background = "#a6adc8"

[colors.search.focused_match]
foreground = "#1e1e2e"
background = "#a6e3a1"

[colors.footer_bar]
foreground = "#1e1e2e"
background = "#a6adc8"

[colors.hints.start]
foreground = "#1e1e2e"
background = "#f9e2af"

[colors.hints.end]
foreground = "#1e1e2e"
background = "#a6adc8"

[colors.selection]
text = "#1e1e2e"
background = "#f5e0dc"

[colors.normal]
black = "#45475a"
red = "#f38ba8"
green = "#a6e3a1"
yellow = "#f9e2af"
blue = "#89b4fa"
magenta = "#f5c2e7"
cyan = "#94e2d5"
white = "#bac2de"

[colors.bright]
black = "#585b70"
red = "#f38ba8"
green = "#a6e3a1"
yellow = "#f9e2af"
blue = "#89b4fa"
magenta = "#f5c2e7"
cyan = "#94e2d5"
white = "#a6adc8"

[colors.dim]
black = "#45475a"
red = "#f38ba8"
green = "#a6e3a1"
yellow = "#f9e2af"
blue = "#89b4fa"
magenta = "#f5c2e7"
cyan = "#94e2d5"
white = "#bac2de"

[[colors.indexed_colors]]
index = 16
color = "#fab387"

[[colors.indexed_colors]]
index = 17
color = "#f5e0dc"

# This section documents the [selection] table of the configuration file.
[selection]
# This string contains all characters that are used as separators for "semantic words" in Alacritty.
# Default: ",â”‚`|:\"' ()[]{}<>\t"
# semantic_escape_chars = "<string>"

# When set to true, selected text will be copied to the primary clipboard.
# Default: false
save_to_clipboard = true

# This section documents the [cursor] table of the configuration file.
[cursor]
# shape = "Block" | "Underline" | "Beam"
# Default: "Block"
# Never: Prevent the cursor from ever blinking
# Off: Disable blinking by default
# On: Enable blinking by default
# Always: Force the cursor to always blink
# Default: "Off"
[cursor.style]
shape = "Underline"
blinking = "On"

# If the vi mode cursor style is "None" or not specified, it will fall back to the active value of the normal cursor.
# Default: "None"
# vi_mode_style = { <shape>, <blinking> } | "None"

# Cursor blinking interval in milliseconds.
# Default: 750
# blink_interval = <integer>

# Time after which cursor stops blinking, in seconds.
# Specifying 0 will disable timeout for blinking.
# Default: 5
# blink_timeout = <integer>

# When this is true, the cursor will be rendered as a hollow box when the window is not focused.
# Default: true
# unfocused_hollow = true | false

# Thickness of the cursor relative to the cell width as floating point number from 0.0 to 1.0.
# Default: 0.15
# thickness = <float>

# This section documents the [terminal] table of the configuration file.
# [terminal]
# Controls the ability to write to the system clipboard with the OSC 52 escape sequence. While this escape sequence is useful to copy contents from the remote server, allowing any application to read from the clipboard can be easily abused while not providing significant benefits over explicitly pasting text.
# Default: "OnlyCopy"
# osc52 = "Disabled" | "OnlyCopy" | "OnlyPaste" | "CopyPaste"

# This section documents the [mouse] table of the configuration file.
[mouse]
# When this is true, the cursor is temporarily hidden when typing.
# Default: false
hide_when_typing = true

# Mouse button which needs to be pressed to trigger this binding.
# mouse = "Middle" | "Left" | "Right" | "Back" | "Forward" | <integer>
# ExpandSelection
# Expand the selection to the current mouse cursor location.
# action = <keyboard.bindings.action> | "ExpandSelection"
# See keyboard.bindings for full documentation on mods, mode, action, and chars.
# When an application running within Alacritty captures the mouse, the `Shift` modifier can be used to suppress mouse reporting. If no action is found for the event, actions for the event without the `Shift` modifier are triggered instead.
# bindings = [{ <mouse>, <mods>, <mode>, <action> | <chars> },]
# bindings = [{ mouse = "Left", mods = "Control", action = "Paste" }]


# This section documents the [hints] table of the configuration file.
# [hints]
# Terminal hints can be used to find text or hyperlinks in the visible part of the terminal and pipe it to other applications.

# Keys used for the hint labels.
# Default: "jfkdls;ahgurieowpq"
# alphabet = "<string>"

# Array with all available hints.
# Each hint must have at least one of regex or hyperlinks and either an action or a command.
# enabled = [{ <regex>, <hyperlinks>, <post_processing>, <persist>, <action>, <command> <binding>, <mouse> },]

# Regex each line will be compared against.
# regex = "<string>"

# When this is true, all OSC 8 escape sequence hyperlinks will be included in the hints.
# hyperlinks = true | false

# When this is true, heuristics will be used to shorten the match if there are characters likely not to be part of the hint (e.g. a trailing .). This is most useful for URIs and applies only to regex matches.
# post_processing = true | false

# When this is true, hints remain persistent after selection.
# persist = true | false

# Copy: Copy the hint's text to the clipboard.
# Paste: Paste the hint's text to the terminal or search.
# Select: Select the hint's text.
# MoveViModeCursor: Move the vi mode cursor to the beginning of the hint.
# action = "Copy" | "Paste" | "Select" | "MoveViModeCursor"

# Command which will be executed when the hint is clicked or selected with the binding.
# The hint's text is always attached as the last argument.
# command = "<string>" | { program = "<string>", args = ["<string>",] }

# See keyboard.bindings for documentation on available values.
# This controls which key binding is used to start the keyboard hint selection process.
# binding = { key = "<string>", mods = "<string>", mode = "<string>" }

# See keyboard.bindings for documentation on available mods.
# The enabled field controls if the hint should be underlined when hovering over the hint text with all mods pressed.
# mouse = { mods = "<string>", enabled = true | false }

# Default:
# [[hints.enabled]]
# command = "xdg-open" # On Linux/BSD
# # command = "open" # On macOS
# # command = { program = "cmd", args = [ "/c", "start", "" ] } # On Windows
# hyperlinks = true
# post_processing = true
# persist = false
# mouse.enabled = true
# binding = { key = "U", mods = "Control|Shift" }
# regex = "(ipfs:|ipns:|magnet:|mailto:|gemini://|gopher://|https://|http://|news:|file:|git://|ssh:|ftp://)[^\u0000-\u001F\u007F-\u009F<>\"\\s{-}\\^âŸ¨âŸ©`]+"
